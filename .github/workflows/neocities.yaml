name: Deploy to Neocities

on:
  push:
    branches:
      - main

concurrency:
  group: deploy-to-neocities
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

 # 2) Incremental updates.json generation (base 1999, keep last 20)
      - name: Generate incremental updates.json
        run: |
          FILE=updates.json
          BASE=2001
          MAX_ENTRIES=20

          #1 Determine last number (or start at BASE)
          if [[ -f $FILE ]]; then
            LAST=$(jq '.[0].number' "$FILE")
          else
            LAST=$BASE
          fi
          NEXT=$(( LAST + 1 ))

          #2 Grab latest commit info
          RAW_SUBJ=$(git log -1 --pretty=format:'%s')
          DATE_RAW=$(git log -1 --pretty=format:'%ci')

          # split title/message on first hyphen
          if [[ "$RAW_SUBJ" == *-* ]]; then
            TITLE=${RAW_SUBJ%%-*}
            MSG=${RAW_SUBJ#*-}
          else
            TITLE="Update #$NEXT"
            MSG="$RAW_SUBJ"
          fi

          # format date as Month-day-Year
          DATE_FMT=$(date -d "$DATE_RAW" +"%B-%-d-%Y")

          # build JSON object, safely escaping quotes
          NEW_ENTRY=$(jq -n \
            --arg sha   "$(git rev-parse --short HEAD)" \
            --arg num   "$NEXT" \
            --arg title "$TITLE" \
            --arg msg   "$MSG" \
            --arg date  "$DATE_FMT" \
            '{ sha: $sha,
               number: ($num|tonumber),
               title: $title,
               message: $msg,
               date: $date }'
          )

          #3 Prepend & truncate to MAX_ENTRIES
          if [[ -f $FILE ]]; then
            jq --argjson new "$NEW_ENTRY" \
               --arg max "$MAX_ENTRIES" \
               '[ $new ] + . | .[0:( $max|tonumber )]' \
               "$FILE" > /tmp/updates.json
          else
            echo "[ $NEW_ENTRY ]" > /tmp/updates.json
          fi
          mv /tmp/updates.json "$FILE"

          echo "üóíÔ∏è Added Update #$NEXT and kept latest $MAX_ENTRIES entries."
        shell: bash

      # Prepare a deployment folder that excludes .git and .github
      - name: Prepare deployment folder
        run: |
          mkdir deploy
          rsync -av --exclude='.git' --exclude='.github' --exclude='.gitignore' --exclude='README.md' --exclude='*.scss' ./ deploy/

      # Remove sourcemappingURL comments from all CSS files in the deploy folder
      - name: Remove sourceMappingURL from CSS files
        run: |
          find deploy -type f -name "*.css" -exec sed -i 's/\/\*# sourceMappingURL=[^*]*\*\///g' {} \;

      - name: Deploy to Neocities
        uses: bcomnes/deploy-to-neocities@v3
        with:
          api_key: ${{ secrets.NEOCITIES_API_TOKEN }}
          cleanup: true
          protected_files: "{assets,json,blog,Thoughts,JS}/*"
          
          neocities_supporter: true
          preview_before_deploy: true
          dist_dir: deploy
