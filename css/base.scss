/*
BASE.CSS - FOR USE IN ALL MAIN SITE PAGES
*/



/* VARIABLES AND DEFINITIONS */
:root{
  
  --rotared: #ff3f2d;
  --rotaorange: #ff602d;
  --rotalightorange: #ff8b2d;
  --rotayellow: #ffc72d;
  --rotagreen: #9dff2d;
  --rotacyan: #2dffae;
  --rotablue: #2d98ff;
  --rotaviolet: #7e2dff;
  --rotamagenta: #b12dff;
  --rotapink: #ff2df2;
  --darkpurple:#41103e;
  --lightpurple: #571b6c;
  --def-border-color: #df7126;

  --yellow-header: rgb(236, 233, 9);
  --def-element-background: rgba(57, 19, 94, 0.5);
  --def-detail-color: #ccc;
  /*BODY BACKGROUNDS*/
  --default-body-background: url(../assets/background.png);
  /*SITE BACKGROUNDS*/
  --default-site-background: url("data:image/svg+xml,%3Csvg width='42' height='44' viewBox='0 0 42 44' xmlns='http://www.w3.org/2000/svg'%3E%3Cg id='Page-1' fill='none' fill-rule='evenodd'%3E%3Cg id='brick-wall' fill='%23673d6f' fill-opacity='0.73'%3E%3Cpath d='M0 0h42v44H0V0zm1 1h40v20H1V1zM0 23h20v20H0V23zm22 0h20v20H22V23z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
}




/*---ELEMENT SIZING SIMPLIFICATION---*/
html {
  box-sizing: border-box;
}

*, *::before, *::after {
  box-sizing: inherit;
}




/*---SITE HEADER AND ANIMATION---*/

.headerflex {
  display: flex;
  flex-wrap: wrap;
  align-items: stretch;
  justify-content: center;
  margin-inline: auto;
  /* 2) Tile that exactly once every 1000px, and mask to text */
  background-size: 1000px 100%;
  background-clip: text;
  -webkit-background-clip: text;
  color: transparent;
  /* 3) Slide it left by exactly one tile (1000px) over 8s */
  animation: slideRainbow 8s linear infinite;
  background-image: repeating-linear-gradient(
    90deg,
    #ff3f2d   0px,    /* red start */
    #ff602d  100px,   /* orange at 10% */
    #ff8b2d  200px,   /* yellow at 20% */
    #ffc72d  300px,   /* green at 30% */
    #9dff2d  400px,   /* cyan at 40% */
    #2dffae  500px,   /* blue at 50% */
    #2d98ff  600px,   /* indigo at 60% */
    #7e2dff  700px,   /* violet at 70% */
    #b12dff  800px,   /* magenta at 80% */
    #ff2df2  900px,   /* pink at 90% */
    #ff3f2d  1000px    /* back to red at 100% */
  );
}
.rainbow {
  margin-bottom: 0.1px;
}
#siteheader {
  min-width: 0;
  font-weight: 700;
  font-size: clamp(0.1rem, 1.5vw, 0.8rem);
  text-align: center;
  padding-left: 1rem;
  padding-right: 1rem;  
}
/* Slide from 0 → -1000px, then repeat seamlessly */
@keyframes slideRainbow {
  from  { background-position:   0   0; }
  to  { background-position: 1000px 0; }
}

/* force the gradient‐clip into the active link’s rainbow text */
.topnav > a.active .rainbow {
  /* hide the fallback link color */
  color: transparent !important;
  font-size: 1.5rem;
  /* clip the background into the text */
  background-clip: text;
  -webkit-background-clip: text;
  /* make sure the animated gradient is applied here too */
  background-image: repeating-linear-gradient(
    90deg,
    #ff3f2d   0px,
    #ff602d  100px,
    #ff8b2d  200px,
    #ffc72d  300px,
    #9dff2d  400px,
    #2dffae  500px,
    #2d98ff  600px,
    #7e2dff  700px,
    #b12dff  800px,
    #ff2df2  900px,
    #ff3f2d 1000px
  );
  background-size: 1000px 100%;
  animation: slideRainbow 8s linear infinite;
}


/*SITE NAVIGATION BAR*/

.navbar {
  display: flex;
  flex-wrap: wrap;               /* let items wrap to new lines */
  justify-content: center;       /* center each row under the one above */
  gap: 0.5rem;                   /* gutter between buttons/rows */
  padding: 0.5rem;
  width: 100%;
}

.navbar a {
  flex: 0 0 150px;            /* fixed total width = 150px */
  display: flex;              /* make the <a> a flex container */
  align-items: center;        /* vertical center */
  justify-content: center;    /* horizontal center */
  width: 150px;               /* explicitly set width */
  height: 3rem;               /* or whatever height you like */
  padding: 0 0.5rem;          /* small horizontal padding inside */
  box-sizing: border-box;  
  background: var(--darkpurple);
  text-decoration: none;
  font-family: 'inky_thin_pixelsregular';
  font-size: 1.5rem;
  position: relative;
  transition: background 100ms;
  white-space: nowrap;
  overflow: hidden;
  color: var(--rotalightorange);
  border: outset;
  border-radius: 10px;
  border-color: rgb(87, 18, 87);
}

.navbar a:hover {
  background: var(--lightpurple);
  border-color: var(--lightpurple);
}

.navbar a:hover::after {
  content: "?";
}

.navbar a:active {
  transform: translate(2px, 2px);
}

/* 1) Make .topnav flex & allow wrapping */
.topnav {
  display: none;
  flex-wrap: wrap;           /* allow items to wrap onto new lines */
  align-items: center;
  justify-content: space-between;
  padding: 0.5rem;
  margin-bottom: 0.5rem;
  background-color: var(--darkpurple);
  background-image: url(/assets/background.png);
  position: relative;
  border-style: double;
  border-radius: 10px;
  border-color: var(--def-border-color);
  font-family: 'inky_thin_pixelsregular';

}

.active {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
}
.active img {
  height: 50px;
  margin-top: -5px;
}
/* 2) Logo and icon stay on row 0 */
.topnav > a.active,
.topnav > a.icon {
  flex: 0 0 auto;            /* never grow/shrink, stay their intrinsic width */
  order: 0;                   /* force them to the first row */
  
}

/* 3) Links container becomes a full-width row when shown */
.topnav #myLinks {
  order: 1;                   /* always below the logo+icon */
  flex: 1 1 100%;             /* take full row width when visible */
  display: none;         /* hidden by default */

}
/* when you press it, it moves down 2px and the shadow inverts */
.topnav #myLinks a:active {
  transform: translate(2px, 2px);
  color: var(--rotaorange);

}
/* 4) When you click, show the links in-flow */
.topnav.responsive #myLinks {
  display: block;
}

/* 5) Style the links themselves */
.topnav #myLinks a {
  display: block;
  padding: 0.8rem 1rem;
  font-size: 1.3rem;
  color: var(--rotalightorange);
  text-decoration: none;
  text-align: center;
  border-style: solid;
  border-width: 1px;
  border-radius: 10px;
  border-color: var(--def-border-color);
  margin: 0.2rem;
  background-color: var(--def-element-background);
}

/* 6) Hamburger container as before, but in flex */
.topnav a.icon {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 58px;
  height: 38px;
  cursor: pointer;
  background-color: var(--def-border-color);
  border-radius: 10px;
}
/* And change the hamburger icon’s background too */
.topnav.responsive a.icon {
  background-color: var(--rotaorange);    /* light grey to show “active” */
}
/* 7) The SVG inside centers perfectly */
.mobilemenu {
  width: 100%;
  height: 100%;
  background: url("/assets/burgermenu.svg") no-repeat center/contain;
}


/*---MAIN SITE BODY---*/

body {
  background-color: #000000;
  background-image: var(--default-site-background);
  color: white;
  font-family: 'retron2000regular';
  font-size: 1.04rem;
}

main {
  inline-size: clamp(0rem, 100%, 90rem);
  /* 2) center the block itself in the viewport */
  margin-inline: auto;
  /* 3) breathing room on the sides—but capped so it doesn’t explode */
  padding-inline: clamp(1rem, 0vw, 2.5rem);
  display: block;
  background-image: var(--default-body-background);
  border-style: outset;
  border-width: 3px;
  border-radius: 20px;
  border-color: var(--def-border-color);
  outline: outset;
  outline-width: 1px;
  outline-offset: -6px;
  outline-color: var(--def-border-color);
  
}




/*HEADERS AND TEXT*/

h1 {
  color: var(--rotayellow);

  font-family: 'computerfontregular';
  line-height: 1.4rem;
  margin-bottom: -0.6rem;
}

h2 {
  font-family: 'inky_thin_pixelsregular';
  margin: .5rem;
  color: var(--rotayellow);
  line-height: 1.8rem;
}

h3 {
  color: var(--rotayellow);
  margin: .5rem;
  font-family: 'inky_thin_pixelsregular';
}




/*<A> TAGS AND LINKS*/

a {
  color: var(--rotalightorange);
}

a:link {
  text-decoration: var(--rotalightorange);
}

a:hover {
  color: var(--rotaorange);
}




/*---ELEMENT HOLDERS, COMMONLY USED ASSETS---*/

.centerheader {
 margin-left: 0;
 margin-bottom: 0;

}
.textbox1 {
  min-width: 0;
  margin-top: 0;/* allow it to collapse under its content’s min-size */
}
.textbox2 { 
  min-width: 0;
  margin-top: 0;
  margin-bottom: 1.8rem;
}
#introductionholder {
  margin-top: 0;
}

hr{
  color: var(--def-border-color);
  border-bottom-style: solid;
  border-bottom-width: 1px;
  border-top-style: solid;
  border-top-width: 3px;
  border-radius: 20px;
}


/* 1) Your parent flex row */
.flexholder {
  display: flex;
  flex-wrap: wrap;          /* will wrap on narrow screens */
  align-items: flex-start;  /* align top of both columns */
  gap: 1rem;
}

/* 2) Text column (left) */
.text-column {
  flex: 1 1 800px;          /* grow/shrink with 800px basis */
  min-width: 0;             /* let it collapse naturally */
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}

/* 3) Force HR to fill text column */
.flextextbreak {
  width: 100%;
  border: none;
  border-bottom: 1px solid var(--def-border-color);
  border-top:    3px solid var(--def-border-color);
  border-radius: 20px;
}



/*RADIO WIDGET*/

.radio {
    flex: 0 0 205px;               /* fixed 205px column, no grow/shrink */
  position: relative;
  float: right;
  margin-bottom: 0px;
  margin-inline: auto;
  margin-top: -2rem;
  border-width:1px;
  border-style:solid;
  border-radius: 10px;
  outline: outset;
  outline-offset: 2px;
  outline-color: var(--def-border-color);
  outline-width: 2px;
  border-color:var(--def-border-color);
  padding: 2px;
  padding-top:20px;
  align-content: center;
  align-self: center;
  justify-content: center;
  background-color: var(--def-element-background);
}

.popoutbutton {
  position: absolute;
  top: 2px;
  right: 5PX;
  pointer-events: all;
  z-index: 10;
}

.popoutbutton img {
  margin: 2px;
}

.display {
  font-size: 1rem;
  max-width: 200px;
  color: var(--rotayellow);
}

.display1 {
  font-size: 1rem;
  max-width: 200px;
  color: var(--rotayellow);
  font-style: italic;
}




/* Full-screen modal overlay */
.phone_modal {
  display: none; /* Hidden by default */
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.8); /* Semi-transparent dark background */
  z-index: 1000;
  align-items: center;
  justify-content: center;
}

/* Modal content container */
.phone_modal_content {
  width: 50%;   /* Adjust as needed */
  height: 90%;  /* Adjust as needed */
  max-width: 100%;
  max-height: 100%;
}

/* SVG image scales to fill the container */
.phone_modal_content img {
  width: 100%;
  height: 100%;
  object-fit: contain; /* Keeps aspect ratio */
}






.updateholder {
  flex: 1 1 300px;       /* same “breakpoint” as before */
  display: flex;
  flex-direction: column;
}

.updates {
  flex: 1 1 auto;
  max-height: 25rem;
  overflow-y: auto;
  scrollbar-width: thin;
  scrollbar-color: var(--rotayellow) #ff612d5d;
  scrollbar-gutter: auto;
}
.updates::-webkit-scrollbar{
  flex: 1 1 auto;
  max-height: 25rem;
  overflow-y: auto;
  scrollbar-width: thin;
  scrollbar-color: var(--rotayellow) #ff612d5d;
  scrollbar-gutter: auto;
}
.post {
  background-color: var(--def-element-background);
  padding: 0.5rem;
  margin-bottom: 0.6rem;
  border-radius: 20px;
  border-width: 2px;
  border-style: solid;
  border-color: var(--def-border-color);
  margin-right: 0.2rem;
}



/* Add these styles to your base.css or create a new CSS file */

/* Fix for the post wrapper to handle narrow viewports better */
.postWrapper {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  flex-wrap: nowrap; /* Don't wrap by default */
}

/* Ensure post title can shrink and wrap properly */
.postTitle {
  color: var(--rotayellow);
  font-size: 1.25rem;
  margin-top: 0px;
  flex: 1 1 0; /* Take available space but can shrink to 0 */
  min-width: 0; /* Critical: allows text to wrap properly */
  word-wrap: break-word; /* Break long words if needed */
  overflow-wrap: break-word; /* Modern property for same purpose */
  /* Limit max width to ensure date has space */
  max-width: calc(100% - 100px); /* Reserve ~100px for date + gap */
}

/* Make date more flexible */
.postDate {
  color: var(--def-detail-color);
  font-size: 0.9rem;
  margin: 0;
  margin-top: 0.3rem;
  flex: 0 0 auto; /* Don't grow or shrink */
  white-space: nowrap; /* Keep date on one line */
  min-width: fit-content; /* Ensure date gets its needed space */
  
}
/* time styling */
.postTime {
  color: var(--def-detail-color);
  font-size: 0.8rem;
  margin: 0;
  margin-bottom: 0.5rem;
}

/* Fix for images inside posts */
.post img {
  max-width: 100%;
  height: auto;
}

/* Fix for multiple images in a row */
.post center {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 0.5rem;
}

/* Ensure post body text wraps properly */
.postBody {
  margin-top: -9px;
  margin-bottom: 0;
  word-wrap: break-word;
  overflow-wrap: break-word;
  min-width: 0; /* Allow shrinking */
}

/* Fix the updates container itself */
.updates {
  min-width: 0; /* Critical: allow the container to shrink */
  overflow-x: hidden; /* Hide horizontal overflow */
}


.recording { 
  width: clamp(10rem, 100%, 45rem);
  margin-bottom: 1rem;
  margin-top: 0rem;
  
}



/*---FOOTER---*/
footer {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
  gap: 0.2rem;
  padding-top: 0.3rem;
}




/*--MEDIA QUERIES--*/
@media (hover: none) and (pointer: coarse) {
  .navbar{ 
    display: none;
  }
  .headerflex {
    display: none;
  }
  .topnav {
    display: flex;
  }
}

@media only screen and (max-width: 800px) {

  .navbar{ 
    display: none;
  }
  .headerflex {
    display: none;
  }
  .topnav {
    display: flex;
  }
}

/* Optional: only wrap on truly narrow screens */
@media (max-width: 400px) {
  .postWrapper {
    flex-wrap: wrap; /* Now allow wrapping */
  }

  .postTitle {
    max-width: 100%; /* Remove the calc restriction */
    flex: 1 1 100%; /* Take full width */
    margin-bottom: 0;
  }

  .postDate {
    width: 100%;
    margin-bottom: 0.5rem;
  }

  /* Make images stack vertically on very small screens */
  .post center {
    flex-direction: column;
  }
  .postDateContainer {
    text-align: left;
    margin-left: 0;
  }
  .postDateContainer .postDate{
    margin-bottom: 0;
  }
  .postTime {
    margin-top: 0;
  }


}